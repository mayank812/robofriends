{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","cardComponent","map","user","i","Scroll","props","style","overflow","border","height","children","SearchBox","searchfield","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAW,oDAAhB,UACI,qBAAKC,IAAG,+BAA4BF,EAA5B,YAA0CG,IAAK,WACvD,gCACI,6BAAKL,IACL,4BAAIC,WCOLK,EAZE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACZC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACvC,OAAO,cAAC,EAAD,CAAeT,GAAKK,EAAOI,GAAGT,GAAIF,KAAOO,EAAOI,GAAGX,KAAMC,MAAQM,EAAOI,GAAGV,OAA/DU,MAEpB,OACA,8BACOH,KCCOI,EARA,SAACC,GACf,OACC,qBAAKC,MAAQ,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,YCKKC,EARG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKlB,UAAW,MAAhB,SACE,uBAAOA,UAAW,mCAAmCmB,KAAM,SAASC,YAAa,gBAAgBC,SAAWH,OC6CjGI,G,wDA3CZ,aAAe,IAAD,8BACX,gBAYHC,eAAiB,SAACC,GACb,EAAKC,SAAS,CAACR,YAAaO,EAAME,OAAOC,SAZ3C,EAAKC,MAAQ,CACXxB,OAAQ,GACRa,YAAa,IAJJ,E,qDAQd,WAAqB,IAAD,OACnBY,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UAC5EF,MAAK,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAACrB,OAAQ6B,S,oBAOtC,WAAU,IAAD,OACJ,EAAgCC,KAAKN,MAA7BxB,EAAR,EAAQA,OACF+B,GADN,EAAgBlB,YACOb,EAAOgC,QAAO,SAAAhC,GACjC,OAAOA,EAAOP,KAAKwC,cAAcC,SAAS,EAAKV,MAAMX,YAAYoB,mBAEzE,OAAQjC,EAAOmC,OAGX,sBAAKvC,UAAW,KAAhB,UACE,oBAAIA,UAAW,KAAf,yBACA,cAAC,EAAD,CAAWkB,aAAegB,KAAKX,iBAC/B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUnB,OAAS+B,SANvB,6C,GAxBYK,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.55fa1204.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className= 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow'>\r\n            <img src = {`https://robohash.org/${id}?200x200`} alt= 'robots' />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\tconst cardComponent = robots.map((user, i) => {\r\n\t\treturn <Card key= {i} id= {robots[i].id} name= {robots[i].name} email= {robots[i].email} />\r\n\t})\r\n\treturn (\r\n\t<div>\r\n       {cardComponent} \r\n       \r\n    </div>\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style= {{overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className= 'pa2'>\r\n\t\t  <input className= 'pa3 ba b--green bg-lightest-blue' type= 'search' placeholder= 'search robots' onChange= {searchChange} />\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\n\nclass App extends Component {\n   constructor() {\n      super()\n      this.state = {\n        robots: [],\n        searchfield: ''\n      }\n   }\n\n   componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response=> response.json())\n    .then(users=> this.setState({robots: users}));\n   }\n\n   onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value});\n   }\n\n   render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robots => {\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n    return !robots.length ?\n      <h1>Loading</h1> :\n    (\n        <div className= 'tc'>\n          <h1 className= 'f1'>RoboFriends</h1>\n          <SearchBox searchChange= {this.onSearchChange} />\n          <Scroll>\n          <CardList robots= {filteredRobots} />\n          </Scroll>\n        </div>\n      );\n   }\n\n        \n    \n}\n\n\n\n    \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}